{"version":3,"sources":["Components/Navbar/index.js","Components/Login/index.js","Components/Signup/index.js","Pages/Home/index.js","Pages/Profile/index.js","Pages/AboutUs/index.js","App.js","registerServiceWorker.js","index.js","utils/API.js","Components/Calendars/CalendarAdmin/index.js"],"names":["Example","props","useState","isOpen","setIsOpen","authorized","setAuthorized","username","setUsername","useEffect","accessString","localStorage","getItem","error","console","Navbar","className","color","light","expand","onClick","Collapse","navbar","Nav","NavItem","Form","inline","disabled","e","preventDefault","removeItem","window","location","href","NavLink","SignIn","state","email","password","errorMessage","loggedIn","showError","showNullError","handleChange","setState","target","id","value","handleSubmit","a","axios","post","response","setItem","data","token","updatedUser","firstName","log","message","style","display","justifyContent","onSubmit","this","bind","textAlign","marginTop","background","FormGroup","Input","placeholder","type","onChange","Button","paddingBottom","Component","SignUp","lastName","phone","password2","errorMsg","length","API","addUser","replace","str","toUpperCase","then","res","status","alert","catch","alt","src","htmlFor","index","width","attendanceOptions","label","_isMounted","getAllEvents","_id","user_id","getAppointmentsAdmin","events","err","toggle","modalToEditEvent","eventToEdit","toggleModalToAddGuests","modalToAddGuestsToEvents","toggleModalToViewGuestList","modalToViewGuestList","toggleModalToEditGuest","modalToEditGuest","onChangeModal","name","editGuestModal","currentTarget","getOneGuest","guestNameToEdit","guestPhoneToEdit","guestEmailToEdit","guestConfirmedToEdit","confirmed","guest_id","convertDate","date","moment","utc","toDate","editEventModalOpen","editTitle","editStart","editEnd","event_id","getOneEventAdmin","title","start","end","closeModal","closeModalToAddGuest","idEvent","closeModalToViewGuestList","guestList","closeModalToEditGuest","submitEditEvent","obj","updateAppointmentAdmin","handleDeleteEvent","confirm","deleteCalendarAdminEvent","reload","handleDeleteGuest","deleteOneGuest","addGuestsToEventModal","onSubmitModalToAddGuests","guestObj","guestName","guestPhone","guestEmail","guestConfirmed","addGuest","submitEditGuest","updateOneGuest","viewGuestList","getAppointmentAdmin","guestsList","guests","onSelectedChanged","onSelectedChangedEdit","isLoading","guestConfirmation","get","headers","Authorization","scrollTo","fontSize","marginLeft","height","map","guest","block","eventsList","event","format","Modal","ModalHeader","ModalBody","onSubmitModalToEdit","defaultValue","CalendarAdmin","idForUserEvents","options","isSearchable","controls","App","exact","path","component","Home","Signup","Login","Profile","AboutUs","CardFooter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","getUser","newUser","logginUser","existingUser","addAppointmentAdmin","newAppointment","put","delete","newGuest","getAllGuests","optionsAdmin","locale","localizer","momentLocalizer","modal","toggleToEdit","appointment","onSubmitModal","slotEvent","slotEventStart","slotEventEnd","getAppointmentsCalendarAdmin","appointmentEdit","eventId","handleSelect","slot","appointments","i","cal_eventsAdmin","handleEventGetter","on","reason","promise","reject","Promise","resolve","eventStyleGetter","isSelected","backgroundColor","borderRadius","opacity","border","paddingLeft","paddingRight","textShadow","userCalendarName","individualEventsId","components","onSelectSlot","step","selectable","eventPropGetter","timeslots","defaultView","views","defaultDate","Date","min","max","onSelectEvent","charCode","React"],"mappings":"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","file":"static/js/main.3c4db1ad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Form,\n} from \"reactstrap\";\nimport \"./style.css\";\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [authorized, setAuthorized] = useState(false);\n  const [username, setUsername] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    const accessString = localStorage.getItem(\"JWT\");\n    const username = localStorage.getItem(\"USERNAME\");\n    if (accessString == null) {\n      setAuthorized(false);\n    } else {\n      try {\n        setUsername(username);\n        setAuthorized(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, []);\n\n  //Logout User\n  const handleLogOut = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"JWT\");\n    window.location.href = \"/\";\n  };\n\n  return (\n    <div>\n      <Navbar className=\"navbar-custom-class\" color=\"dark\" light expand=\"md\">\n        {/* <NavbarBrand className=\"text-light\" href=\"/\">\n          <i className=\"fas fa-home\"></i>\n        </NavbarBrand> */}\n        <span className=\"hamburger-icon\">\n          <i onClick={toggle} className=\"fas fa-bars text-light\"></i>\n        </span>\n\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            {authorized ? (\n              <>\n                <NavItem className=\"loggedIn mr-3 nav-items-custom\">\n                  <Form inline>\n                    <span disabled=\"disabled\" className=\"btn text-info\">\n                      Logged in as: {username}\n                    </span>\n                  </Form>\n                </NavItem>\n                <NavItem className=\"nav-items-custom\">\n                  <Form inline>\n                    <button\n                      className=\"btn btn-logout text-light mr-1\"\n                      onClick={handleLogOut}\n                    >\n                      Logout\n                    </button>\n                  </Form>\n                </NavItem>\n\n                <NavItem>\n                  <Form inline>\n                    <NavLink\n                      className=\"text-light  nav-items-custom btn text-info\"\n                      href=\"/profile\"\n                    >\n                      Control Panel\n                    </NavLink>\n                  </Form>\n                </NavItem>\n              </>\n            ) : (\n              <>\n                <NavItem>\n                  <NavLink className=\"text-light  nav-items-custom\" href=\"/\">\n                    <i className=\"fas fa-home\"></i>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"text-light  nav-items-custom\"\n                    href=\"/aboutus\"\n                  >\n                    About this site\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"text-light  nav-items-custom\"\n                    href=\"/login\"\n                  >\n                    Login\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"text-light  nav-items-custom\"\n                    href=\"/signup\"\n                  >\n                    Register\n                  </NavLink>\n                </NavItem>\n              </>\n            )}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Example;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\n\nimport \"./style.css\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errorMessage: \"\",\n    loggedIn: false,\n    showError: false,\n    showNullError: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if (email === \"\" || password === \"\") {\n      this.setState({\n        showError: false,\n        showNullError: true,\n        loggedIn: false,\n      });\n    } else {\n      try {\n        const response = await axios.post(\"/auth/login\", {\n          email,\n          password,\n        });\n        localStorage.setItem(\"JWT\", response.data.token);\n        localStorage.setItem(\"USERNAME\", response.data.updatedUser.username);\n        localStorage.setItem(\"NAME\", response.data.updatedUser.firstName);\n        console.log(response);\n        this.setState({\n          loggedIn: true,\n          showError: false,\n          showNullError: false,\n        });\n        window.location.href = \"/profile\";\n      } catch (error) {\n        console.error(error.response);\n        this.setState({\n          errorMessage: error.response.data.message,\n        });\n        console.log(error);\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"container signinPage\">\n        <div\n          className=\"text-center\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <Form className=\"formBox\" onSubmit={this.handleSubmit.bind(this)}>\n            <h4\n              className=\"grey-text text-darken-3\"\n              style={{ textAlign: \"center\", marginTop: \"15px\" }}\n            >\n              Sign in\n            </h4>\n            <hr style={{ background: \"black\" }}></hr>\n            <FormGroup>\n              <Input\n                className=\"mb-3\"\n                placeholder=\"Email\"\n                // style={{ float: \"right\" }}\n                type=\"email\"\n                id=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n              <Input\n                placeholder=\"Password\"\n                // style={{ float: \"right\", marginBottom: \"15px\" }}\n                type=\"password\"\n                id=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <Button style={{ marginTop: \"15px\" }} className=\"btn-primary \">\n                Login\n              </Button>\n            </FormGroup>\n            <p>\n              Don't have an account yet? <br />\n              <a href=\"/signup\">Click here to register</a>\n            </p>\n            <h4\n              style={{\n                textAlign: \"center\",\n                color: \"red\",\n                paddingBottom: \"10px\",\n              }}\n            >\n              {this.state.errorMessage}\n            </h4>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport \"./style.css\";\n// import { Link } from \"react-router-dom\";\n\nclass SignUp extends Component {\n  state = {\n    username: \"\",\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    password2: \"\",\n    errorMsg: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      !this.state.username ||\n      !this.state.lastName ||\n      !this.state.firstName ||\n      !this.state.email ||\n      !this.state.password ||\n      !this.state.password2\n    ) {\n      alert(\"Please fill out all the required fields *\");\n      return;\n    }\n    if (this.state.password !== this.state.password2) {\n      this.setState({\n        errorMsg: \"Passwords don't match!\",\n      });\n      return;\n    }\n    if (this.state.password.length < 6) {\n      this.setState({\n        errorMsg: \"Password must be at least 6 characters long!\",\n      });\n      return;\n    }\n\n    API.addUser({\n      username: this.state.username,\n      lastName: this.state.lastName.replace(/^./, (str) => str.toUpperCase()),\n      firstName: this.state.firstName.replace(/^./, (str) => str.toUpperCase()),\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n    })\n      .then((res) => {\n        if (res.data.status === 400) {\n          this.setState({\n            errorMsg: res.data.message,\n          });\n          return;\n        } else {\n          this.setState({\n            username: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            email: \"\",\n            phone: \"\",\n            password: \"\",\n            password2: \"\",\n          });\n          alert(\"You can Log-in now!\");\n          window.location.href = \"/login\";\n        }\n      })\n\n      .catch((error) => console.log(error));\n  };\n\n  render() {\n    return (\n      <div className=\"container signupPage\">\n        <div className=\"col-md-12 signupTitle\">\n          <h4 className=\"signupTitleInSignup\">\n            Create an account to start managing your events\n          </h4>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 instructionsBoxSignup\">\n            <h3 className=\"signupTitleInSignup\">Event Organizer</h3>\n            <p className=\"instructionsSignupParagraph\">\n              By creating an account, you will be able to create events using a\n              calendar and manage your time in a more organized and better way\n            </p>\n            <img\n              className=\"calendarImageSignup\"\n              alt=\"calendar\"\n              src=\"./Images/calendarImg.PNG\"\n            />\n          </div>\n          <div className=\"col-md-6 signupForm\">\n            <div className=\"formGrid\">\n              <Form className=\"formboxSignup\" onSubmit={this.handleSubmit}>\n                <h4\n                  className=\"registerTitle\"\n                  style={{ textAlign: \"center\", marginTop: \"15px\" }}\n                >\n                  Register\n                </h4>\n                <p style={{ textAlign: \"left\" }}>* Required</p>\n\n                <FormGroup>\n                  <hr style={{ background: \"grey\", marginTop: \"10px\" }}></hr>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"username\">* Username</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"username\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">* Last Name</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"lastName\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">* First Name</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"firstName\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"phone\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"email\">* Email</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"email\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"password\">* Password</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"password\"\n                      id=\"password\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"input-field\">\n                    <label htmlFor=\"password2\">* Confirm Password</label>\n                    <Input\n                      className=\"form-control\"\n                      type=\"password\"\n                      id=\"password2\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <h5\n                    style={{\n                      textAlign: \"center\",\n                      color: \"red\",\n                      paddingBottom: \"10px\",\n                    }}\n                  >\n                    {this.state.errorMsg}\n                  </h5>\n                  <div className=\"input-field\">\n                    <Button\n                      style={{ marginTop: \"30px\" }}\n                      className=\"btn-primary\"\n                    >\n                      Create Account\n                    </Button>\n                  </div>\n                </FormGroup>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"./style.css\";\n\nclass index extends Component {\n  render() {\n    return (\n      <div className=\"container homeContainer\">\n        <div className=\"row homeMainBox\">\n          <div className=\"col-xl-12\">\n            <h4 className=\"homeTitleWelcome\">\n              Welcome to My Events Management App\n            </h4>\n            <hr />\n            <p className=\"homeParagraph\">\n              This app will help you organize your schedule in a better way. You\n              can create events to be added to your own personal account, and\n              add guests to those events.\n              <br />\n              Using a calendar to select the desired dates and times, you will\n              manage your appointments to keep track on your busy schedule and\n              never miss those important dates. <br />\n              Organize parties, meetings, and much more. <br />\n              <a className=\"text-light btn btn-secondary\" href=\"/aboutus\">\n                Click here to see demo\n              </a>\n              <a href=\"/login\">\n                <Button className=\"homeButtons\" width=\"200px\" color=\"warning\">\n                  <b>Login</b>\n                </Button>\n              </a>\n              <a href=\"/signup\">\n                <Button className=\"homeButtons\" color=\"warning\">\n                  <b>Register</b>\n                </Button>\n              </a>\n            </p>\n            <hr />\n          </div>\n          <div className=\"col-xl-12 col-lg-4 col-md-12\">\n            <img\n              className=\"calendarHomeImg\"\n              alt=\"calendar\"\n              src=\"./Images/calendarImg.PNG\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default index;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nimport CalendarAdmin from \"../../Components/Calendars/CalendarAdmin\";\nimport \"./style.css\";\nimport moment from \"moment\";\nimport API from \"../../utils/API\";\n\nlet attendanceOptions = [\n  {\n    value: \"No\",\n    label: \"No\",\n  },\n  {\n    value: \"Yes\",\n    label: \"Yes\",\n  },\n  {\n    value: \"Maybe\",\n    label: \"Maybe\",\n  },\n];\n\nclass index extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user_id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      events: [],\n      isLoading: true,\n      error: false,\n      eventToEdit: \"\",\n      modalToEditEvent: false,\n      modalToAddGuestsToEvents: false,\n      modalToViewGuestList: false,\n      modalToEditGuest: false,\n      editTitle: \"\",\n      editStart: \"\",\n      editEnd: \"\",\n      guestName: \"\",\n      guestPhone: \"\",\n      guestEmail: \"\",\n      guestConfirmed: \"\",\n      idEvent: \"\",\n      guestsList: [],\n      guestConfirmation: \"\",\n      guestNameToEdit: \"\",\n      guestPhoneToEdit: \"\",\n      guestEmailToEdit: \"\",\n      guestConfirmedToEdit: \"\",\n      guest_id: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const accessString = localStorage.getItem(\"JWT\");\n    if (accessString == null) {\n      this.setState({\n        isLoading: false,\n        error: true,\n      });\n    } else {\n      try {\n        const response = await axios.get(\"/auth/profile\", {\n          headers: { Authorization: `JWT ${accessString}` },\n        });\n        this.setState({\n          user_id: response.data._id,\n          firstName: response.data.firstName,\n          lastName: response.data.lastName,\n          email: response.data.email,\n          isLoading: false,\n          error: false,\n        });\n\n        window.scrollTo(0, 0);\n        this.getAllEvents();\n        // console.log(response)\n      } catch (error) {\n        console.error(error.response);\n        this.setState({\n          error: true,\n        });\n      }\n    }\n  }\n\n  getAllEvents = async () => {\n    let _id = this.state.user_id;\n    await API.getAppointmentsAdmin(_id)\n      .then((res) => {\n        this.setState({\n          events: res.data.events,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //Toggle for modal form to edit events\n  toggle = () => {\n    this.setState({\n      modalToEditEvent: !this.state.modalToEditEvent,\n      eventToEdit: \"\",\n    });\n  };\n\n  //Toggle for modal form to add Guests to events\n  toggleModalToAddGuests = () => {\n    this.setState({\n      modalToAddGuestsToEvents: !this.state.modalToAddGuestsToEvents,\n    });\n  };\n\n  //Toggle for modal to view Guest List\n  toggleModalToViewGuestList = () => {\n    this.setState({\n      modalToViewGuestList: !this.state.modalToViewGuestList,\n    });\n  };\n\n  //Toggle for modal to Edit Guest\n  toggleModalToEditGuest = () => {\n    this.setState({\n      modalToEditGuest: !this.state.modalToEditGuest,\n    });\n  };\n\n  //onChange for modal forms\n  onChangeModal = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  editGuestModal = ({ currentTarget }) => {\n    this.toggleModalToEditGuest();\n    let _id = currentTarget.value;\n    API.getOneGuest(_id)\n      .then((res) => {\n        this.setState({\n          guestNameToEdit: res.data.name,\n          guestPhoneToEdit: res.data.phone,\n          guestEmailToEdit: res.data.email,\n          guestConfirmedToEdit: res.data.confirmed,\n          guest_id: res.data._id,\n        });\n        // console.log(this.state.guestConfirmedToEdit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  convertDate = (date) => {\n    return moment.utc(date).toDate();\n  };\n\n  //Edit event submit function\n  editEventModalOpen = ({ currentTarget }) => {\n    this.toggle();\n    if (!this.state.modalToEditEvent) {\n      this.setState({\n        eventToEdit: \"\",\n        editTitle: \"\",\n        editStart: \"\",\n        editEnd: \"\",\n      });\n    }\n    const event_id = currentTarget.value;\n    API.getOneEventAdmin(event_id)\n      .then((res) => {\n        this.setState({\n          eventToEdit: res.data,\n          editTitle: res.data.title,\n          editStart: this.convertDate(res.data.start),\n          editEnd: this.convertDate(res.data.end),\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalToEditEvent: false,\n    });\n  };\n\n  closeModalToAddGuest = () => {\n    this.setState({\n      modalToAddGuestsToEvents: false,\n      idEvent: \"\",\n    });\n  };\n\n  closeModalToViewGuestList = () => {\n    this.setState({\n      modalToViewGuestList: false,\n      guestList: \"\",\n    });\n  };\n\n  closeModalToEditGuest = () => {\n    this.setState({\n      modalToEditGuest: false,\n      guestNameToEdit: \"\",\n      guestPhoneToEdit: \"\",\n      guestEmailToEdit: \"\",\n    });\n  };\n\n  submitEditEvent = async (e) => {\n    e.preventDefault();\n\n    let obj = {\n      _id: this.state.eventToEdit._id,\n      title: this.state.editTitle,\n      start: this.state.editStart,\n      end: this.state.editEnd,\n    };\n\n    let _id = this.state.eventToEdit._id;\n\n    await API.updateAppointmentAdmin(_id, obj)\n\n      .then((res) => console.log(res))\n      .catch((error) => console.log(error));\n\n    window.location.href = \"/profile\";\n  };\n\n  handleDeleteEvent = async ({ currentTarget }) => {\n    let _id = currentTarget.value;\n    if (\n      window.confirm(`Are you sure you wish to delete this Event permanently?`)\n    ) {\n      await API.deleteCalendarAdminEvent(_id)\n        .then(() => {\n          window.location.reload();\n        })\n        // this.getAllEvents()})\n        .catch((err) => console.log(err));\n    }\n  };\n\n  handleDeleteGuest = async ({ currentTarget }) => {\n    let _id = currentTarget.value;\n    if (\n      window.confirm(`Are you sure you wish to delete this Guest permanently?`)\n    ) {\n      await API.deleteOneGuest(_id)\n        .then((res) => console.log(res))\n        .catch((err) => console.log(err));\n      window.location.href = \"/profile\";\n    }\n  };\n\n  addGuestsToEventModal = (e) => {\n    let idEvent = e.target.value;\n    this.setState({\n      idEvent,\n    });\n    this.toggleModalToAddGuests();\n  };\n\n  onSubmitModalToAddGuests = (e) => {\n    e.preventDefault();\n    let guestObj = {\n      name: this.state.guestName.replace(/^./, (str) => str.toUpperCase()),\n      phone: this.state.guestPhone,\n      email: this.state.guestEmail,\n      confirmed: this.state.guestConfirmed.value,\n    };\n    let _id = this.state.idEvent;\n\n    if (\n      !guestObj.name ||\n      !guestObj.phone ||\n      !guestObj.email ||\n      !guestObj.confirmed\n    ) {\n      return alert(\"All fields are mandatory!\");\n    }\n\n    API.addGuest(_id, guestObj)\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          guestName: \"\",\n          guestPhone: \"\",\n          guestEmail: \"\",\n          guestConfirmed: \"\",\n        });\n      })\n      .catch((err) => console.log(err));\n    this.closeModalToAddGuest();\n  };\n\n  submitEditGuest = async (e) => {\n    e.preventDefault();\n\n    let obj = {\n      _id: this.state.guest_id,\n      name: this.state.guestNameToEdit.replace(/^./, (str) =>\n        str.toUpperCase()\n      ),\n      phone: this.state.guestPhoneToEdit,\n      email: this.state.guestEmailToEdit,\n      confirmed: this.state.guestConfirmedToEdit,\n    };\n\n    let _id = this.state.guest_id;\n\n    await API.updateOneGuest(_id, obj)\n\n      .then((res) => console.log(res))\n      .catch((error) => console.log(error));\n    this.closeModalToEditGuest();\n    this.closeModalToViewGuestList();\n  };\n\n  viewGuestList = ({ currentTarget }) => {\n    this.toggleModalToViewGuestList();\n    let _id = currentTarget.value;\n    API.getAppointmentAdmin(_id)\n      .then((res) => {\n        // console.log(res.data.guests)\n        this.setState({\n          guestsList: res.data.guests,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onSelectedChanged = (value) => {\n    this.setState({\n      guestConfirmed: value,\n    });\n    // console.log(`Option selected:`, value);\n  };\n\n  onSelectedChangedEdit = (value) => {\n    this.setState({\n      guestConfirmedToEdit: value.value,\n    });\n  };\n\n  render() {\n    const user_id = this.state.user_id;\n\n    const { isLoading, error } = this.state;\n    if (error) {\n      return (\n        <div\n          className=\"container\"\n          style={{\n            marginTop: \"180px\",\n            fontSize: \"30px\",\n            background: \"rgba(196, 210, 212, 0.699)\",\n          }}\n        >\n          ...Problem fetching user data. Please login again\n        </div>\n      );\n    }\n    if (isLoading) {\n      return (\n        <div\n          style={{\n            marginTop: \"100px\",\n            marginLeft: \"10%\",\n            fontSize: \"30px\",\n            height: \"100vh\",\n            color: \"white\",\n          }}\n        >\n          Loading User Data...\n        </div>\n      );\n    }\n\n    const guests = this.state.guestsList;\n    const guestList = guests.length ? (\n      guests.map((guest) => {\n        if (guest.confirmed === \"Yes\" || guest.confirmed === \"yes\") {\n          return (\n            <div key={guest._id} className=\"card guestListBox\">\n              <div className=\"guestListInfoColumn\">\n                <p className=\"guestListContent\"> Name: {guest.name}</p>\n                <p className=\"guestListContent\"> Phone: {guest.phone}</p>\n                <p className=\"guestListContent\"> Email: {guest.email}</p>\n                <p className=\"guestListContent\">\n                  Is {guest.name} attending? {guest.confirmed}{\" \"}\n                </p>\n              </div>\n\n              <div className=\"guestListButtonsColumnInModal\">\n                <Button\n                  onClick={this.handleDeleteGuest}\n                  value={guest._id}\n                  block\n                  className=\"guestListButtons deleteButton\"\n                >\n                  Delete\n                </Button>\n                <Button\n                  value={guest._id}\n                  onClick={this.editGuestModal}\n                  block\n                  className=\"guestListButtons editButton\"\n                >\n                  Edit\n                </Button>\n              </div>\n            </div>\n          );\n        } else {\n          return (\n            <div key={guest._id} className=\"card confirmedNoBox\">\n              <div className=\"guestListInfoColumn\">\n                <p className=\"guestListContent\"> Name: {guest.name}</p>\n                <p className=\"guestListContent\"> Phone: {guest.phone}</p>\n                <p className=\"guestListContent\"> Email: {guest.email}</p>\n                <p className=\"guestListContent\">\n                  Is {guest.name} attending? {guest.confirmed}{\" \"}\n                </p>{\" \"}\n              </div>\n\n              <div className=\"guestListButtonsColumnInModal\">\n                <Button\n                  onClick={this.handleDeleteGuest}\n                  value={guest._id}\n                  block\n                  className=\"guestListButtons deleteButton\"\n                >\n                  Delete\n                </Button>\n                <Button\n                  value={guest._id}\n                  onClick={this.editGuestModal}\n                  block\n                  className=\"guestListButtons editButton\"\n                >\n                  Edit\n                </Button>\n              </div>\n            </div>\n          );\n        }\n      })\n    ) : (\n      <div>\n        No Guests yet for this event...close this window and choose the add\n        Guests option\n      </div>\n    );\n\n    const guestConfirmed = this.state.guestConfirmed;\n    const guestConfirmedToEdit = this.state.guestConfirmedToEdit;\n\n    const events = this.state.events;\n    const eventsList = events.length ? (\n      events.map((event) => {\n        return (\n          <div className=\"mainBox\" key={event._id}>\n            {/* events list card */}\n            <div className=\"card-body-profile\">\n              <h3 className=\"eventDetailsText\">\n                Description: <b>{event.title}</b>\n              </h3>\n              <ul className=\"datesText\">\n                <li>\n                  Start Date / Time:{\" \"}\n                  {moment(event.start).format(\"YYYY-MMMM-DD ddd hh:mm A\")}\n                </li>\n                <li>\n                  End Date / Time:{\" \"}\n                  {moment(event.end).format(\"YYYY-MMMM-DD ddd hh:mm A\")}\n                </li>\n              </ul>\n\n              <div className=\"events-list-btns-wrapper\">\n                <button\n                  className=\"events-list-btns events-list-btns__edit\"\n                  onClick={this.editEventModalOpen}\n                  value={event._id}\n                >\n                  <i className=\"fas fa-tasks\"></i> Edit\n                </button>\n                <button\n                  value={event._id}\n                  className=\"events-list-btns events-list-btns__delete\"\n                  onClick={this.handleDeleteEvent}\n                >\n                  <i className=\"fas fa-trash\"></i> Delete\n                </button>\n                <button\n                  className=\"events-list-btns events-list-btns__add-guest\"\n                  onClick={this.addGuestsToEventModal}\n                  value={event._id}\n                >\n                  <i className=\"fas fa-user-plus\"></i> Add Guests\n                </button>\n                <button\n                  className=\"events-list-btns events-list-btns__view-guests\"\n                  onClick={this.viewGuestList}\n                  value={event._id}\n                >\n                  <i className=\"fas fa-glasses\"></i> View Guests\n                </button>\n              </div>\n            </div>\n            {/* events list card */}\n\n            {/* Modal To Edit Events */}\n            <div>\n              <Modal\n                className=\"modal-xl modalForMobile\"\n                isOpen={this.state.modalToEditEvent}\n                toggle={this.toggle}\n              >\n                <ModalHeader className=\"modalToEdit\" toggle={this.eventToEdit}>\n                  <div>\n                    <button\n                      className=\"danger modalMsg\"\n                      onClick={this.closeModal}\n                    >\n                      Close\n                    </button>\n                    <h4>Please confirm your event details </h4>\n                  </div>\n                </ModalHeader>\n                <ModalBody className=\"modalToEdit\">\n                  <Form onSubmit={this.onSubmitModalToEdit}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"editTitle\"\n                        id=\"editTitle\"\n                        defaultValue={this.state.editTitle}\n                        placeholder=\"Please enter the event details\"\n                        onChange={this.onChangeModal}\n                      />\n                      <label className=\"mt-3 ml-2\">\n                        Event Start Date/Time (YYYY-MM-DD HH:MM:SS):\n                      </label>\n                      <Input\n                        type=\"text\"\n                        name=\"editStart\"\n                        id=\"editStart\"\n                        defaultValue={this.state.editStart}\n                        placeholder=\"Please enter the start time details\"\n                        onChange={this.onChangeModal}\n                      />\n                      <label className=\"mt-3 ml-2\">\n                        Event End Date/Time (YYYY-MM-DD HH:MM:SS):\n                      </label>\n                      <Input\n                        type=\"text\"\n                        name=\"editEnd\"\n                        id=\"editEnd\"\n                        defaultValue={this.state.editEnd}\n                        placeholder=\"Please enter the end time details\"\n                        onChange={this.onChangeModal}\n                      />\n                      <Button\n                        onClick={this.submitEditEvent}\n                        color=\"info\"\n                        style={{ marginTop: \"1rem\" }}\n                        block\n                      >\n                        Submit Changes\n                      </Button>\n                    </FormGroup>\n                  </Form>\n                  <button\n                    value={event.id}\n                    className=\"btn deleteButton btn-block text-light\"\n                    onClick={this.handleDeleteEvent}\n                  >\n                    Delete Event\n                  </button>\n                </ModalBody>\n              </Modal>\n            </div>\n            {/* Modal to edit events ends here */}\n          </div>\n        );\n      })\n    ) : (\n      <div className=\"noEventYetMessage\">\n        No events added yet...select dates and times on calendar below.\n      </div>\n    );\n    return (\n      <div className=\"container profileMainContainer\">\n        <div className=\"row\">\n          <h4 className=\"col-lg-12 profilePageMainTitle\">\n            Welcome to your Personal Event Management System{\" \"}\n            {this.state.firstName}\n          </h4>\n        </div>\n        <hr style={{ background: \"white\" }}></hr>\n\n        <div className=\"row profileContainer\">\n          <div className=\"col-md-12 listOfGuestsToInvite\">\n            <h4 style={{ textAlign: \"center\", marginTop: \"5px\" }}>\n              Events List\n            </h4>\n            {eventsList}\n          </div>\n          <div id=\"calendarBox\" className=\"col-md-12 calendarBox\">\n            <CalendarAdmin\n              getAllEvents={this.getAllEvents}\n              idForUserEvents={user_id}\n            />\n          </div>\n        </div>\n\n        {/* Modal To Add Guests to Events */}\n        <div className=\"col-lg-12\">\n          <Modal\n            className=\"modal-xl modalForMobile\"\n            isOpen={this.state.modalToAddGuestsToEvents}\n            toggle={this.toggleModalToAddGuests}\n          >\n            <ModalHeader className=\"modalToEdit\" toggle={this.eventToEdit}>\n              <div>\n                <button\n                  className=\"danger modalMsg\"\n                  onClick={this.closeModalToAddGuest}\n                >\n                  Close\n                </button>\n                <h4>Add a Guest to this Event</h4>\n              </div>\n            </ModalHeader>\n            <ModalBody className=\"modalToEdit\">\n              <Form onSubmit={this.onSubmitModalToAddGuests}>\n                <FormGroup>\n                  <label>Guest's Name:</label>\n                  <Input\n                    type=\"text\"\n                    name=\"guestName\"\n                    id=\"guestName\"\n                    placeholder=\"Enter Guest Name\"\n                    onChange={this.onChangeModal}\n                  />\n                  <label className=\"mt-3 ml-2\">Guest's Phone:</label>\n                  <Input\n                    type=\"text\"\n                    name=\"guestPhone\"\n                    id=\"guestPhone\"\n                    placeholder=\"Enter Guest phone\"\n                    onChange={this.onChangeModal}\n                  />\n\n                  <label className=\"mt-3 ml-2\">Guest's Email:</label>\n                  <Input\n                    type=\"email\"\n                    name=\"guestEmail\"\n                    id=\"guestEmail\"\n                    placeholder=\"Enter Guest Email\"\n                    onChange={this.onChangeModal}\n                  />\n                  <label className=\"mt-3 ml-2\">\n                    Confirm if this guest is attending:\n                  </label>\n                  <Select\n                    name=\"form-field-name\"\n                    value={guestConfirmed}\n                    options={attendanceOptions}\n                    placeholder=\"Confirm Attendance\"\n                    isSearchable={false}\n                    onChange={this.onSelectedChanged}\n                  />\n                  <Button\n                    onClick={this.onSubmitModalToAddGuests}\n                    value={event._id}\n                    color=\"info\"\n                    style={{ marginTop: \"1rem\" }}\n                    block\n                  >\n                    Add Guest\n                  </Button>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n\n          {/* Modal to view Guest List */}\n          <div>\n            <Modal\n              className=\"modal-xl modalForMobile\"\n              isOpen={this.state.modalToViewGuestList}\n              toggle={this.toggleModalToViewGuestList}\n            >\n              <ModalHeader\n                className=\"modalToEdit\"\n                toggle={this.modalToViewGuestList}\n              >\n                <div>\n                  <button\n                    className=\"danger modalMsg\"\n                    onClick={this.closeModalToViewGuestList}\n                  >\n                    Close\n                  </button>\n                  <h4 className=\"guestListTitleModal\">Guests List</h4>\n                </div>\n              </ModalHeader>\n              <ModalBody className=\"modalToEdit guestListModalMobile\">\n                {guestList}\n              </ModalBody>\n            </Modal>\n          </div>\n          {/* Modal to edit Guests */}\n          <div>\n            <Modal\n              className=\"modal-xl modalForMobile\"\n              isOpen={this.state.modalToEditGuest}\n              toggle={this.toggleModalToEditGuest}\n            >\n              <ModalHeader\n                className=\"modalToEdit\"\n                toggle={this.modalToEditGuest}\n              >\n                <div>\n                  <button\n                    className=\"danger modalMsg\"\n                    onClick={this.closeModalToEditGuest}\n                  >\n                    Close\n                  </button>\n                  <h4 className=\"guestListTitleModal\">Guest Info to Edit</h4>\n                </div>\n              </ModalHeader>\n              <ModalBody className=\"modalToEdit\">\n                <Form onSubmit={this.submitEditGuest}>\n                  <FormGroup>\n                    <Input\n                      onChange={this.onChangeModal}\n                      name=\"guestNameToEdit\"\n                      defaultValue={this.state.guestNameToEdit}\n                    />\n                    <Input\n                      onChange={this.onChangeModal}\n                      name=\"guestPhoneToEdit\"\n                      defaultValue={this.state.guestPhoneToEdit}\n                    />\n                    <Input\n                      onChange={this.onChangeModal}\n                      name=\"guestEmailToEdit\"\n                      defaultValue={this.state.guestEmailToEdit}\n                    />\n                    <label>Is {this.state.guestNameToEdit} attending?</label>\n                    <Select\n                      name=\"form-field-name\"\n                      value={guestConfirmedToEdit}\n                      options={attendanceOptions}\n                      placeholder={guestConfirmedToEdit}\n                      isSearchable={false}\n                      onChange={this.onSelectedChangedEdit}\n                    />\n                  </FormGroup>\n                  <Button onClick={this.submitEditGuest}>Save Changes</Button>\n                </Form>\n              </ModalBody>\n            </Modal>\n          </div>\n          {/* Modal to edit guests */}\n        </div>\n      </div>\n    );\n  }\n}\nexport default index;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass index extends Component {\n  render() {\n    return (\n      <div className=\"container aboutMainComp\">\n        <h1 className=\"aboutTitle\">About This App</h1>\n        <hr style={{ background: \"black\" }}></hr>\n        <div>\n          <div className=\"row row1\">\n            <p className=\"col-md-6 par1\">\n              This application is used to manage personal events such as\n              meetings, parties, appointments, etc. After creating an account,\n              you will be able to login to your personal profile and start\n              adding those important events to your calendar.\n            </p>\n            <img\n              className=\"col-md-6\"\n              alt=\"guest 1\"\n              src=\"./Images/saveEvents.PNG\"\n            ></img>\n          </div>\n          <div className=\"row row1\">\n            <img\n              className=\"col-md-6\"\n              alt=\"guest 1\"\n              src=\"./Images/guests1.PNG\"\n            ></img>\n            <p className=\"col-md-5 par1\">\n              If any of your events have guests, you can create a list of all\n              intended guests to invite. Then, you will have the option to\n              select if the guests have confirmed attendance or not.\n            </p>\n          </div>\n          <div className=\"row row1\">\n            <p className=\"col-md-6 par1\">\n              If they have confirmed, the background color will change to green,\n              so you can easily differenciate between confirmed guests and\n              not-confirmed guests.\n            </p>\n            <img\n              className=\"col-md-6\"\n              alt=\"guest 3\"\n              src=\"./Images/guests3.PNG\"\n            ></img>\n          </div>\n\n          <h6 className=\"videoInstructionsReg\">\n            Down below, there's a demo explaining how to use this application.\n          </h6>\n          <img\n            className=\"arrowDown videoInstructionsReg\"\n            alt=\"arrow down\"\n            src=\"./Images/arrowDown.png\"\n          ></img>\n        </div>\n\n        <div>\n          <h3 className=\"aboutTitles videoInstructionsReg\">\n            Registration process\n          </h3>\n          <video className=\"videoInstructionsReg\" controls>\n            <source src=\"./Videos/eventAppFirstPart.mp4\"></source>\n          </video>\n        </div>\n        <div>\n          <h3 className=\"aboutTitles videoInstructionsReg\">\n            Event creation process\n          </h3>\n          <video controls className=\"videoInstructionsReg\">\n            <source src=\"./Videos/eventAppSecondPart.mp4\"></source>\n          </video>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default index;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport Home from \"./Pages/Home\";\nimport Profile from \"./Pages/Profile\";\nimport AboutUs from \"./Pages/AboutUs\";\nimport { CardFooter } from \"reactstrap\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"appHeader\">\n          <img\n            className=\"logo justify-content-center\"\n            alt=\"logo\"\n            src=\"./Images/logoEventManagement.png\"\n          />\n        </div>\n        <Navbar />\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/aboutus\" component={AboutUs} />\n          </Switch>\n          <CardFooter className=\"footer\">\n            Alexis Yepes Sanabria 2019 ©{\" \"}\n            <a\n              target=\"blank\"\n              href=\"https://github.com/alexisyepes/event-management-system\"\n            >\n              Click for code reference <i className=\"fab fa-github\"></i>\n            </a>\n          </CardFooter>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","import axios from \"axios\";\n\nexport default {\n\tgetUser: id => {\n\t\treturn axios.get(\"/api/users/\" + id);\n\t},\n\taddUser: newUser => {\n\t\treturn axios.post(\"/auth/signup\", newUser);\n\t},\n\tlogginUser: existingUser => {\n\t\treturn axios.post(\"/api/users/login\", existingUser);\n\t},\n\n\t//Events Calendar\n\taddAppointmentAdmin: (_id, newAppointment) => {\n\t\treturn axios.post(\"/schedule/users/\" + _id, newAppointment);\n\t},\n\tupdateAppointmentAdmin: (_id, data) => {\n\t\treturn axios.put(\"/schedule/calendar_events/\" + _id, data);\n\t},\n\tdeleteCalendarAdminEvent: _id => {\n\t\treturn axios.delete(\"/schedule/calendar_events/\" + _id);\n\t},\n\tgetAppointmentsAdmin: _id => {\n\t\treturn axios.get(\"/auth/users/\" + _id);\n\t},\n\tgetAppointmentAdmin: _id => {\n\t\treturn axios.get(\"/schedule/calendar_events/\" + _id);\n\t},\n\tgetOneEventAdmin: _id => {\n\t\treturn axios.get(\"/schedule/calendar_events/\" + _id);\n\t},\n\n\t//Guests\n\taddGuest: (_id, newGuest) => {\n\t\treturn axios.post(\"/guests/events/\" + _id, newGuest);\n\t},\n\tgetAllGuests: _id => {\n\t\treturn axios.get(\"/guests/all\");\n\t},\n\tgetOneGuest: _id => {\n\t\treturn axios.get(\"/guests/guest/\" + _id);\n\t},\n\tupdateOneGuest: (_id, data) => {\n\t\treturn axios.put(\"/guests/guest/\" + _id, data);\n\t},\n\tdeleteOneGuest: _id => {\n\t\treturn axios.delete(\"/guests/guest/\" + _id);\n\t}\n};\n","// import React, { Component } from \"react\";\nimport React from \"react\";\nimport API from \"../../../utils/API\";\nimport Select from \"react-select\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport axios from \"axios\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./style.css\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\n\nlet optionsAdmin = [\n  {\n    value: \"allDay\",\n    label: \"All day Event\",\n  },\n  {\n    value: \"partial\",\n    label: \"Partial day Event\",\n  },\n];\n\nmoment.locale(\"en-GB\");\nconst localizer = momentLocalizer(moment);\n\nclass CalendarAdmin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmitModalToEdit = this.onSubmitModalToEdit.bind(this);\n\n    this.state = {\n      modal: false,\n      modalToEditEvent: false,\n      slotEvent: \"\",\n      title: \"\",\n      userCalendarName: \"\",\n      appointment: \"\",\n      appointmentEdit: \"\",\n      eventId: \"\",\n      editTitle: \"\",\n      editStart: \"\",\n      editEnd: \"\",\n      eventToEdit: \"\",\n      individualEventsId: \"\",\n      cal_eventsAdmin: [\n        //State is updated via componentDidMount\n      ],\n    };\n  }\n\n  async componentDidMount() {\n    const user_id = this.props.idForUserEvents;\n    axios\n      .get(\"/auth/users/\" + user_id)\n\n      .then((response) => {\n        let appointments = response.data.events;\n\n        for (let i = 0; i < appointments.length; i++) {\n          appointments[i].start = this.convertDate(appointments[i].start);\n          appointments[i].end = this.convertDate(appointments[i].end);\n        }\n        this.setState({\n          cal_eventsAdmin: appointments,\n          userCalendarName: response.data.firstName,\n        });\n        // console.log(this.state.userCalendarName);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // Modal Functions ************************************\n\n  //Toggle for modal form to add Appointments to calendar\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  //Toggle to edit appointments on calendar\n  toggleToEdit = () => {\n    this.setState({\n      modalToEditEvent: !this.state.modalToEditEvent,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalToEditEvent: false,\n      modal: false,\n    });\n  };\n\n  //onChange for modal forms\n  onChangeModal = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  //onChange for <Select /> on modal form\n  onSelectedChanged = (value) => {\n    this.setState({\n      appointment: value,\n    });\n    // console.log(`Option selected:`, value);\n  };\n\n  //Submit for adding appointments to calendar (Admin)\n  onSubmitModal = (e) => {\n    e.preventDefault();\n    let obj = {\n      title: this.state.title,\n      start: this.state.slotEvent.start,\n      end: this.state.slotEvent.end,\n      appointment: this.state.appointment.value,\n    };\n\n    if (!obj.title) {\n      return alert(\"Event details are required!\");\n    }\n\n    let _id = this.props.idForUserEvents;\n\n    API.addAppointmentAdmin(_id, obj)\n\n      .then(() =>\n        this.setState({\n          slotEventStart: \"\",\n          slotEventEnd: \"\",\n          title: \"\",\n          appointment: \"\",\n          modal: false,\n        })\n      )\n      // .then(() => this.getAppointmentsCalendarAdmin())\n      .then(() => {\n        this.getAppointmentsCalendarAdmin();\n        this.props.getAllEvents();\n      })\n      .catch((error) => console.log(error));\n\n    // this.state.cal_eventsAdmin.push(obj);\n    // window.location.href = \"/profile\";\n  };\n\n  onSubmitModalToEdit = async (e) => {\n    e.preventDefault();\n\n    let obj = {\n      _id: this.state.eventToEdit._id,\n      title: this.state.editTitle,\n      start: this.state.editStart,\n      end: this.state.editEnd,\n      appointment: this.state.appointmentEdit,\n    };\n\n    let _id = this.state.eventToEdit._id;\n\n    await API.updateAppointmentAdmin(_id, obj)\n\n      .then((res) => console.log(res))\n      .catch((error) => console.log(error));\n\n    window.location.href = \"/profile\";\n  };\n\n  handleDeleteEvent = async (e) => {\n    e.preventDefault();\n    const _id = this.state.eventId;\n    if (\n      window.confirm(`Are you sure you wish to delete this Event permanently?`)\n    ) {\n      await API.deleteCalendarAdminEvent(_id)\n        .then(() => {\n          this.getAppointmentsCalendarAdmin();\n          this.props.getAllEvents();\n          this.setState({\n            modalToEditEvent: false,\n          });\n        })\n        .catch((err) => console.log(err));\n      // window.location.href = \"/profile\";\n    }\n  };\n\n  //Slot event on Calendar opens modal\n  handleSelect = (slot) => {\n    let slotEvent = {\n      start: this.convertDate(slot.start),\n      end: this.convertDate(slot.end),\n    };\n\n    this.setState({\n      slotEvent,\n    });\n    this.toggle();\n  };\n\n  convertDate = (date) => {\n    return moment.utc(date).toDate();\n  };\n  // Modal Functions End **************************************\n\n  getAppointmentsCalendarAdmin = () => {\n    let _id = this.props.idForUserEvents;\n\n    API.getAppointmentsAdmin(_id)\n      .then((response) => {\n        let appointments = response.data.events;\n\n        for (let i = 0; i < appointments.length; i++) {\n          appointments[i].start = this.convertDate(appointments[i].start);\n          appointments[i].end = this.convertDate(appointments[i].end);\n        }\n        this.setState({\n          cal_eventsAdmin: appointments,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    // this.props.history.push(\"/profile\");\n  };\n\n  //Opens up modal with event info to update\n  handleEventGetter = (event) => {\n    let _id = event._id;\n    this.setState({\n      eventId: event._id,\n    });\n    if (this.state.modalToEditEvent === true) {\n      this.setState({\n        eventId: \"\",\n      });\n    }\n    this.toggleToEdit();\n    API.getAppointmentAdmin(_id)\n      .then((res) => {\n        if (res.error) {\n          return process.on(\"unhandledRejection\", (reason, promise) => {\n            promise.reject(res.error);\n          });\n        }\n        this.setState({\n          eventToEdit: res.data,\n          appointmentEdit: res.data.appointment,\n          editTitle: res.data.title,\n          editStart: this.convertDate(res.data.start),\n          editEnd: this.convertDate(res.data.end),\n        });\n        return Promise.resolve(res);\n      })\n      .then(\n        this.setState({\n          eventToEdit: \"\",\n          appointmentEdit: \"\",\n          editTitle: \"\",\n          editStart: \"\",\n          editEnd: \"\",\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n\n  //Function to define styling on Calendar's Admin's events\n  eventStyleGetter = (event, start, end, isSelected) => {\n    // console.log(event);\n\n    // var backgroundColor = \"#\" + event.hexColor;\n    var style = {\n      backgroundColor: \"rgb(51, 156, 255)\",\n      borderRadius: \"5px\",\n      opacity: 0.8,\n      fontSize: \"16px\",\n      color: \"white\",\n      border: \"1px solid blue\",\n      display: \"block\",\n      paddingLeft: \"12px\",\n      paddingRight: \"12px\",\n      textShadow: \"-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black\",\n    };\n    if (event.appointment === \"allDay\") {\n      style.backgroundColor = \"blue\";\n      style.color = \"white\";\n    }\n\n    return {\n      style,\n    };\n  };\n\n  render() {\n    const { cal_eventsAdmin } = this.state;\n    const appointment = this.state.appointment;\n\n    let components = {};\n\n    return (\n      <div className=\"row\">\n        {/* Calendar */}\n        <div className=\"col-md-12 mainCalendarComponentWrapper pt-3\">\n          <h4 className=\"calendarMainTitle\">\n            {this.state.userCalendarName}'s Calendar\n          </h4>\n          <hr style={{ background: \"white\" }}></hr>\n          <Calendar\n            className=\"calendarComponents\"\n            components={components}\n            events={cal_eventsAdmin}\n            onSelectSlot={this.handleSelect}\n            step={15}\n            selectable=\"ignoreEvents\"\n            eventPropGetter={this.eventStyleGetter}\n            timeslots={4}\n            defaultView=\"day\"\n            views={[\"day\", \"agenda\"]}\n            defaultDate={new Date()}\n            localizer={localizer}\n            min={new Date(2019, 10, 0, 5, 0, 0)}\n            max={new Date(2019, 10, 0, 23, 0, 0)}\n            onSelectEvent={this.handleEventGetter}\n          />\n        </div>\n        {/* Calendar Ends*/}\n\n        {/* Modal To add Event to Calendar */}\n        <div>\n          <Modal\n            className=\"modal-xl modalForMobile\"\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n          >\n            <ModalHeader\n              className=\"modalToEdit\"\n              charCode=\"\"\n              toggle={this.handleSelect}\n            >\n              <button className=\"danger modalMsg\" onClick={this.closeModal}>\n                Close\n              </button>\n              Please confirm your event details\n            </ModalHeader>\n            <ModalBody className=\"modalToEdit\">\n              <Form onSubmit={this.onSubmitModal}>\n                <FormGroup>\n                  <Select\n                    name=\"form-field-name\"\n                    value={appointment}\n                    options={optionsAdmin}\n                    placeholder=\"Select one of the following:\"\n                    isSearchable={false}\n                    onChange={this.onSelectedChanged}\n                  />\n                  <label className=\"mt-3 ml-2\">Event Details:</label>\n\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    value={this.state.title}\n                    placeholder=\"Please enter the event description here\"\n                    onChange={this.onChangeModal}\n                  />\n\n                  <p className=\"time-on-modal mt-3 ml-2\">\n                    Starts:\n                    {moment(this.state.slotEvent.start).format(\n                      \"dddd, MMMM Do YYYY, h:mm a\"\n                    )}\n                  </p>\n                  <p className=\"time-on-modal mt-3 ml-2\">\n                    Ends:\n                    {moment(this.state.slotEvent.end).format(\n                      \"dddd, MMMM Do YYYY, h:mm a\"\n                    )}\n                  </p>\n                  <Button color=\"info\" style={{ marginTop: \"1rem\" }} block>\n                    Submit Event\n                  </Button>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n        {/* Modal to add event to calendar ends here */}\n\n        {/* Modal To Edit Events */}\n        <div>\n          <Modal\n            className=\"modal-xl modalForMobile\"\n            isOpen={this.state.modalToEditEvent}\n            toggle={this.toggleToEdit}\n          >\n            <ModalHeader\n              className=\"modalToEdit\"\n              charCode=\"\"\n              toggle={this.handleEventGetter}\n            >\n              <button className=\"danger modalMsg\" onClick={this.closeModal}>\n                Close\n              </button>\n              Please confirm your event details\n            </ModalHeader>\n            <ModalBody className=\"modalToEdit\">\n              <Form onSubmit={this.onSubmitModalToEdit}>\n                <FormGroup>\n                  <label>Event details:</label>\n\n                  <Input\n                    type=\"text\"\n                    name=\"editTitle\"\n                    id=\"editTitle\"\n                    defaultValue={this.state.eventToEdit.title}\n                    placeholder=\"Please enter the event details\"\n                    onChange={this.onChangeModal}\n                  />\n                  <label className=\"mt-3 ml-2\">\n                    Event Start Date/Time (YYYY-MM-DD HH:MM:SS):\n                  </label>\n\n                  <Input\n                    type=\"text\"\n                    name=\"editStart\"\n                    id=\"editStart\"\n                    defaultValue={this.state.editStart}\n                    placeholder=\"Please enter the start time details\"\n                    onChange={this.onChangeModal}\n                  />\n                  <label className=\"mt-3 ml-2\">\n                    Event End Date/Time (YYYY-MM-DD HH:MM:SS):\n                  </label>\n\n                  <Input\n                    type=\"text\"\n                    name=\"editEnd\"\n                    id=\"editEnd\"\n                    defaultValue={this.state.editEnd}\n                    placeholder=\"Please enter the end time details\"\n                    onChange={this.onChangeModal}\n                  />\n\n                  <Button color=\"info\" style={{ marginTop: \"1rem\" }} block>\n                    Submit Event\n                  </Button>\n                </FormGroup>\n              </Form>\n              <button\n                className=\"deleteBtnEvent\"\n                onClick={this.handleDeleteEvent}\n                style={{ marginTop: \"1rem\" }}\n              >\n                Delete Event\n              </button>\n            </ModalBody>\n          </Modal>\n        </div>\n        {/* Modal to edit events ends here */}\n      </div>\n    );\n  }\n}\n\nexport default CalendarAdmin;\n"],"sourceRoot":""}